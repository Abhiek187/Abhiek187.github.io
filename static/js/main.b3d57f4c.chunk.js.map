{"version":3,"sources":["App.js","About.js","Projects.js","Contact.js","serviceWorker.js","index.js"],"names":["navbar","navPosition","About","document","querySelector","textContent","classList","add","remove","onClickLink","this","props","react_default","a","createElement","className","tabIndex","src","alt","Link","to","aria-label","onClick","Component","Projects","projects","JSON","parse","stringify","projectData","map","project","key","id","name","image","about","technology","join","website","href","target","rel","repo","Contact","App","state","slideDirection","checkScroll","offsetTop","window","pageYOffset","setSlider","dest","location","pathname","_this","setState","_this2","onscroll","react_transition_group","timeout","enter","exit","classNames","Switch","Route","exact","path","render","src_About","src_Projects","src_Contact","withRouter","Boolean","hostname","match","ReactDOM","BrowserRouter","basename","process","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+0FAUIA,EACAC,8HCmCWC,qMApCXC,SAASC,cAAc,SAASC,YAAc,6BAC9CF,SAASC,cAAc,gBAAgBE,UAAUC,IAAI,YACrDJ,SAASC,cAAc,mBAAmBE,UAAUE,OAAO,YAC3DL,SAASC,cAAc,kBAAkBE,UAAUE,OAAO,6CAGpD,IACEC,EAAgBC,KAAKC,MAArBF,YAUV,OACIG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBC,SAAU,GAAxC,SACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBC,SAAU,EACxCC,IAAI,oBAAoBC,IAAI,yBAC9BN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYC,SAAU,GAf/B,4kBAkBRJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMJ,UAAU,cAAcK,GAAG,YAAYC,aAAW,iBACtDC,QAAS,kBAAMb,EAAY,cAC3BG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCAnCHQ,sBC4DLC,8LArDXrB,SAASC,cAAc,SAASC,YAAc,gCAC9CF,SAASC,cAAc,gBAAgBE,UAAUE,OAAO,YACxDL,SAASC,cAAc,mBAAmBE,UAAUC,IAAI,YACxDJ,SAASC,cAAc,kBAAkBE,UAAUE,OAAO,6CAGpD,IACEC,EAAgBC,KAAKC,MAArBF,YAEFgB,EAAWC,KAAKC,MAAMD,KAAKE,UAAUC,IAE7C,OACIjB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YACdH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMJ,UAAU,aAAaK,GAAG,SAASC,aAAW,cAClDC,QAAS,kBAAMb,EAAY,WAC3BG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBC,SAAU,GAA3C,YACGJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACXU,EAASK,IAAI,SAAAC,GAAO,OAEnBnB,EAAAC,EAAAC,cAAA,MAAIkB,IAAKD,EAAQE,IACfrB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBC,SAAU,GAAIe,EAAQG,MACpDtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBC,SAAU,EAAGC,IAAKc,EAAQI,MACxDjB,IAAK,YAAca,EAAQG,OAC7BtB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBC,SAAU,GAAIe,EAAQK,OACpDxB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAsBC,SAAU,GAA7C,eACee,EAAQM,WAAWC,KAAK,OAGtCP,EAAQQ,QACP3B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAmByB,KAAMT,EAAQQ,QAASE,OAAO,SAC9DC,IAAI,uBADJ,gBAGA9B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAmBC,SAAU,GAA1C,uCAEFJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgByB,KAAMT,EAAQY,KAAMF,OAAO,SACtDC,IAAI,uBADN,sBAKN9B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBC,SAAU,GAA3C,gCAEFJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMJ,UAAU,cAAcK,GAAG,WAAWC,aAAW,gBACrDC,QAAS,kBAAMb,EAAY,aAC3BG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCApDAQ,aCiDRqB,8LA5CXzC,SAASC,cAAc,SAASC,YAAc,+BAC9CF,SAASC,cAAc,gBAAgBE,UAAUE,OAAO,YACxDL,SAASC,cAAc,mBAAmBE,UAAUE,OAAO,YAC3DL,SAASC,cAAc,kBAAkBE,UAAUC,IAAI,6CAGjD,IACEE,EAAgBC,KAAKC,MAArBF,YAEV,OACCG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WACXH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMJ,UAAU,aAAaK,GAAG,YAAYC,aAAW,iBACrDC,QAAS,kBAAMb,EAAY,cAC3BG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBC,SAAU,GAA1C,WAEAJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBACXyB,KAAK,iEAAiEC,OAAO,SAC7EC,IAAI,uBACJ9B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAHf,WAKAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAmByB,KAAK,wCACnCC,OAAO,SAASC,IAAI,uBACpB9B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAFf,aAIAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiByB,KAAK,+BACjCC,OAAO,SAASC,IAAI,uBACpB9B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAFf,WAKAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgByB,KAAK,kCAChCC,OAAO,QACP7B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAFf,oBAvCUQ,aHShBsB,6MAOJC,MAAQ,CACNC,eAAgB,UAiBlBC,YAAc,WAEZhD,EAASG,SAASC,cAAc,UAEhCH,EAAmC,IAArBD,EAAOiD,UAAkBhD,EAAcD,EAAOiD,UAC5DC,OAAOC,aAAelD,EACpBD,EAAOM,UAAUC,IAAI,UAAYP,EAAOM,UAAUE,OAAO,aAG7D4C,UAAY,SAAAC,GAEuB,aAA7BH,OAAOI,SAASC,SAElBC,EAAKC,SAAS,CAACV,eAAgB,UACO,cAA7BG,OAAOI,SAASC,UAEZ,UAATF,EACFG,EAAKC,SAAS,CAACV,eAAgB,UAMjCS,EAAKC,SAAS,CAACV,eAAgB,6FAnCA,MAA7BG,OAAOI,SAASC,SAClBpD,SAASC,cAAc,SAASC,YAAc,4BACV,WAA7B6C,OAAOI,SAASC,UAAsD,cAA7BL,OAAOI,SAASC,UACnC,aAA7BL,OAAOI,SAASC,UAAwD,iBAA7BL,OAAOI,SAASC,UAC9B,qCAA7BL,OAAOI,SAASC,UACa,sBAA7BL,OAAOI,SAASC,WAChBpD,SAASC,cAAc,SAASC,YAAc,8BAEhDL,EAASG,SAASC,cAAc,UAChCH,EAAcD,EAAOiD,2CA8Bd,IAAAS,EAAAhD,KACDqC,EAAiBrC,KAAKoC,MAAMC,eAC5BO,EAAW5C,KAAKC,MAAM2C,SAG5B,OAFAJ,OAAOS,SAAWjD,KAAKsC,YAGrBpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeC,SAAU,GAAvC,sBAEAJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBC,SAAU,GAA3C,iFAIFJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAEbH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMJ,UAAU,cAAcK,GAAG,SAC/BE,QAAS,kBAAMoC,EAAKN,UAAU,WADhC,SAEAxC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMJ,UAAU,iBAAiBK,GAAG,YAClCE,QAAS,kBAAMoC,EAAKN,UAAU,cADhC,YAEAxC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMJ,UAAU,gBAAgBK,GAAG,WACjCE,QAAS,kBAAMoC,EAAKN,UAAU,aADhC,YAGFxC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8C,EAAA,gBAAD,CAAiB7C,UAAW,oBAAsBgC,GAChDnC,EAAAC,EAAAC,cAAC8C,EAAA,cAAD,CAAe5B,IAAKsB,EAAStB,IAAK6B,QAAS,CAAEC,MAAO,IAAKC,KAAM,KAC7DC,WAAY,SACZpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAQX,SAAUA,GAEhB1C,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAA+B,IAAKC,OAAQ,kBAEvDzD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYC,SAAU,GAAnC,6FAMJJ,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOE,KAA+B,SAAUC,OAAQ,kBACtDzD,EAAAC,EAAAC,cAACwD,EAAD,CAAO7D,YAAaiD,EAAKN,eAE3BxC,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOE,KAA+B,YAAaC,OAAQ,kBACzDzD,EAAAC,EAAAC,cAACyD,EAAD,CAAU9D,YAAaiD,EAAKN,eAE9BxC,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOE,KAA+B,WAAYC,OAAQ,kBACxDzD,EAAAC,EAAAC,cAAC0D,EAAD,CAAS/D,YAAaiD,EAAKN,kBAML,MAA7BF,OAAOI,SAASC,UAAiD,WAA7BL,OAAOI,SAASC,UACtB,cAA7BL,OAAOI,SAASC,UAAyD,aAA7BL,OAAOI,SAASC,UAC/B,iBAA7BL,OAAOI,SAASC,UACa,qCAA7BL,OAAOI,SAASC,UACa,sBAA7BL,OAAOI,SAASC,UAAoC3C,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOG,OAAQ,kBACnEzD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBC,SAAU,GAAvC,mEAKJJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,cACaH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAayB,KAAK,uBAAuBC,OAAO,SACtEC,IAAI,uBADK,SAEX9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBE,IAAI,gBAAgBC,IAAI,0BAE1DN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAW0B,OAAO,SAASC,IAAI,sBAC1CF,KAAK,qEADP,eADF,mDAzHQjB,aAoIHkD,cAAW5B,GIrIN6B,QACW,cAA7BxB,OAAOI,SAASqB,UAEe,UAA7BzB,OAAOI,SAASqB,UAEhBzB,OAAOI,SAASqB,SAASC,MACvB,2DCXNC,IAASR,OAERzD,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAeC,SAAUC,IAAwBpE,EAAAC,EAAAC,cAACmE,EAAD,OACjD9E,SAAS+E,eAAe,SDuHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b3d57f4c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Link, Switch, withRouter } from 'react-router-dom';\r\n//import SwipeableRoutes from 'react-swipeable-routes';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport './App.css';\r\nimport About from './About';\r\nimport Projects from './Projects';\r\nimport Contact from './Contact';\r\n\r\nlet navbar;\r\nlet navPosition;\r\n\r\nclass App extends Component {\r\n  static propTypes = {\r\n    match: PropTypes.object.isRequired,\r\n    location: PropTypes.object.isRequired,\r\n    history: PropTypes.object.isRequired\r\n  };\r\n\r\n  state = {\r\n    slideDirection: 'left' // Determines which direction to slide components\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Change title of tab every page change\r\n    if (window.location.pathname === '/')\r\n      document.querySelector('title').textContent = 'Abhishek Chaudhuri - Home';\r\n    else if (window.location.pathname !== '/about' && window.location.pathname !== '/projects' &&\r\n      window.location.pathname !== '/contact' && window.location.pathname !== '/Memory-Game' &&\r\n      window.location.pathname !== '/frontend-nanodegree-arcade-game' &&\r\n      window.location.pathname !== '/Neighborhood-Map')\r\n      document.querySelector('title').textContent = 'Abhishek Chaudhuri - Error';\r\n    // Check where web scroll is for sticky navbar\r\n    navbar = document.querySelector('.links');\r\n    navPosition = navbar.offsetTop;\r\n  }\r\n\r\n  checkScroll = () => {\r\n    // If scroll position is beyond the navbar, make it sticky\r\n    navbar = document.querySelector('.links');\r\n    // Don't set navPosition to 0\r\n    navPosition = navbar.offsetTop === 0 ? navPosition : navbar.offsetTop;\r\n    window.pageYOffset >= navPosition ?\r\n      navbar.classList.add('sticky') : navbar.classList.remove('sticky');\r\n  };\r\n\r\n  setSlider = dest => {\r\n    // Check where to slide the components\r\n    if (window.location.pathname === '/contact') {\r\n      // At Contact, always slide right\r\n      this.setState({slideDirection: 'right'});\r\n    } else if (window.location.pathname === '/projects') {\r\n      // At Projects, check which link was clicked\r\n      if (dest === 'about') {\r\n        this.setState({slideDirection: 'right'});\r\n      } else {\r\n        this.setState({slideDirection: 'left'});\r\n      }\r\n    } else {\r\n      // At About, always slide left (default)\r\n      this.setState({slideDirection: 'left'});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const slideDirection = this.state.slideDirection;\r\n    const location = this.props.location;\r\n    window.onscroll = this.checkScroll;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"heading\">\r\n          <h1 className=\"heading-name\" tabIndex={0}>Abhishek Chaudhuri</h1>\r\n          {/* Add tabIndex to important information */}\r\n          <h2 className=\"heading-headline\" tabIndex={0}>\r\n            Computer Engineering & Science Student at Rutgers University - New Brunswick\r\n          </h2>\r\n        </header>\r\n        <nav className=\"links\">\r\n          {/* Redirect routes without reloading the browser */}\r\n          <Link className=\"links-about\" to=\"/about\"\r\n            onClick={() => this.setSlider('about')}>About</Link>\r\n          <Link className=\"links-projects\" to=\"/projects\"\r\n            onClick={() => this.setSlider('projects')}>Projects</Link>\r\n          <Link className=\"links-contact\" to=\"/contact\"\r\n            onClick={() => this.setSlider('contact')}>Contact</Link>\r\n        </nav>\r\n        <hr/>\r\n        <TransitionGroup className={'transition-group ' + slideDirection}>\r\n          <CSSTransition key={location.key} timeout={{ enter: 600, exit: 600 }}\r\n            classNames={'slide'}>\r\n            <Switch location={location}>\r\n              {/* Ensure route works with any website url */}\r\n              <Route exact path={process.env.PUBLIC_URL + '/'} render={() => (\r\n                /* Default page */\r\n                <main className=\"home\">\r\n                  <p className=\"home-info\" tabIndex={0}>\r\n                    Hello and welcome to my website!\r\n                    Please click the links above for more info about me.\r\n                  </p>\r\n                </main>\r\n              )}/>\r\n              <Route path={process.env.PUBLIC_URL + '/about'} render={() => (\r\n                <About onClickLink={this.setSlider}/>\r\n              )}/>\r\n              <Route path={process.env.PUBLIC_URL + '/projects'} render={() => (\r\n                <Projects onClickLink={this.setSlider}/>\r\n              )}/>\r\n              <Route path={process.env.PUBLIC_URL + '/contact'} render={() => (\r\n                <Contact onClickLink={this.setSlider}/>\r\n              )}/>\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        {/* Ignore paths that take you to other repos, otherwise redirect to error page */}\r\n        {window.location.pathname !== '/' && window.location.pathname !== '/about' &&\r\n          window.location.pathname !== '/projects' && window.location.pathname !== '/contact' &&\r\n          window.location.pathname !== '/Memory-Game' &&\r\n          window.location.pathname !== '/frontend-nanodegree-arcade-game' &&\r\n          window.location.pathname !== '/Neighborhood-Map' && <Route render={() => (\r\n          <main className=\"error\">\r\n            <p className=\"error-message\" tabIndex={0}>\r\n              Whoops! That path is invalid. Please click the links above.\r\n            </p>\r\n          </main>\r\n        )}/>}\r\n        <hr/>\r\n        <footer className=\"foot\">\r\n          <span className=\"foot-left\">\r\n            Made using <a className=\"foot-react\" href=\"https://reactjs.org/\" target=\"_blank\"\r\n              rel=\"noopener noreferrer\">React</a>\r\n            <img className=\"foot-react-img\" src=\"/img/logo.svg\" alt=\"React logo (an atom)\"/>\r\n          </span>\r\n          <span className=\"foot-right\">\r\n            <a className=\"foot-mit\" target=\"_blank\" rel=\"noopener noreferrer\"\r\n              href=\"https://github.com/Abhiek187/abhiek187.github.io/blob/dev/LICENSE\">\r\n              MIT License</a> Copyright (c) 2019 Abhishek Chaudhuri\r\n          </span>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App); // Get access to match, location, and history\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass About extends Component {\r\n  static propTypes = {\r\n    onClickLink: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.querySelector('title').textContent = 'Abhishek Chaudhuri - About';\r\n    document.querySelector('.links-about').classList.add('selected');\r\n    document.querySelector('.links-projects').classList.remove('selected');\r\n    document.querySelector('.links-contact').classList.remove('selected');\r\n  }\r\n\r\n\trender() {\r\n    const { onClickLink } = this.props;\r\n\r\n    const bio = 'Abhishek Chaudhuri is a college student from North Brunswick, New Jersey. He studies' +\r\n      ' at Rutgers University-New Brunswick, majors in Computer Engineering, and minors in Computer' +\r\n      ' Science. He excels in subjects like math and science and has a strong penchant for' +\r\n      ' programming and technology. Some of his hobbies include doing taekwondo, playing the flute &' +\r\n      ' piccolo, and playing video games. His ultimate goal in life is to help make society better' +\r\n      ' for everyone. He can put his technical skills to good use by gaining experience from working' +\r\n      ' with other companies who value his ambitions.';\r\n\r\n\t\treturn (\r\n      <main className=\"about\">\r\n        <div className=\"about-wrapper\">\r\n          <h3 className=\"about-heading\" tabIndex={0}>About</h3>\r\n          <div className=\"about-container\">\r\n            <img className=\"about-headshot\" tabIndex={0}\r\n              src=\"/img/Headshot.png\" alt=\"Headshot of Abhishek\"/>\r\n            <p className=\"about-bio\" tabIndex={0}>{bio}</p>\r\n          </div>\r\n        </div>\r\n        <Link className=\"arrow-right\" to=\"/projects\" aria-label=\"Go to Projects\"\r\n          onClick={() => onClickLink('projects')}>\r\n          <i className=\"fas fa-arrow-right\"/>\r\n        </Link>\r\n      </main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport projectData from './projects.json';\r\n\r\nclass Projects extends Component {\r\n  static propTypes = {\r\n    onClickLink: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.querySelector('title').textContent = 'Abhishek Chaudhuri - Projects';\r\n    document.querySelector('.links-about').classList.remove('selected');\r\n    document.querySelector('.links-projects').classList.add('selected');\r\n    document.querySelector('.links-contact').classList.remove('selected');\r\n  }\r\n\r\n\trender() {\r\n    const { onClickLink } = this.props;\r\n    // Extract JSON data as an array\r\n    const projects = JSON.parse(JSON.stringify(projectData));\r\n\r\n\t\treturn (\r\n      <main className=\"projects\">\r\n        <Link className=\"arrow-left\" to=\"/about\" aria-label=\"Go to About\"\r\n          onClick={() => onClickLink('about')}>\r\n          <i className=\"fas fa-arrow-left\"/>\r\n        </Link>\r\n        <div className=\"projects-wrapper\">\r\n\t\t\t    <h3 className=\"projects-heading\" tabIndex={0}>Projects</h3>\r\n          <ul className=\"projects-list\">\r\n            {projects.map(project => (\r\n              /* Each list item needs a key */\r\n              <li key={project.id}>\r\n                <h4 className=\"projects-name\" tabIndex={0}>{project.name}</h4>\r\n                <img className=\"projects-image\" tabIndex={0} src={project.image}\r\n                  alt={'Image of ' + project.name}/>\r\n                <p className=\"projects-about\" tabIndex={0}>{project.about}</p>\r\n                <p className=\"projects-technology\" tabIndex={0}>\r\n                  Made Using: {project.technology.join(', ')}\r\n                </p>\r\n                {/* If no project link is directly available, follow directions on GitHub */}\r\n                {project.website ? (\r\n                  <a className=\"projects-website\" href={project.website} target=\"_blank\"\r\n                  rel=\"noopener noreferrer\">View Project</a>\r\n                ) : (\r\n                  <p className=\"projects-website\" tabIndex={0}>&darr; See GitHub link below &darr;</p>\r\n                )}\r\n                <a className=\"projects-repo\" href={project.repo} target=\"_blank\"\r\n                  rel=\"noopener noreferrer\">View on GitHub</a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"projects-addendum\" tabIndex={0}>...And much more on GitHub!</p>\r\n        </div>\r\n        <Link className=\"arrow-right\" to=\"/contact\" aria-label=\"Go to Contact\"\r\n          onClick={() => onClickLink('contact')}>\r\n          <i className=\"fas fa-arrow-right\"/>\r\n        </Link>\r\n      </main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n  static propTypes = {\r\n    onClickLink: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.querySelector('title').textContent = 'Abhishek Chaudhuri - Contact';\r\n    document.querySelector('.links-about').classList.remove('selected');\r\n    document.querySelector('.links-projects').classList.remove('selected');\r\n    document.querySelector('.links-contact').classList.add('selected');\r\n  }\r\n\r\n\trender() {\r\n    const { onClickLink } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<main className=\"contact\">\r\n        <Link className=\"arrow-left\" to=\"/projects\" aria-label=\"Go to Projects\"\r\n          onClick={() => onClickLink('projects')}>\r\n          <i className=\"fas fa-arrow-left\"/>\r\n        </Link>\r\n        <div className=\"contact-wrapper\">\r\n          <h3 className=\"contact-heading\" tabIndex={0}>Contact</h3>\r\n          {/* Each link opens in a new tab */}\r\n          <span className=\"contact-row\">\r\n            <a className=\"contact-resume\"\r\n              href=\"https://www.dropbox.com/s/yjfranbk08szefq/Resume%20v5.pdf?dl=0\" target=\"_blank\"\r\n              rel=\"noopener noreferrer\">\r\n              <i className=\"fas fa-file-pdf\"/> Resume\r\n            </a>\r\n            <a className=\"contact-linkedin\" href=\"https://www.linkedin.com/in/abhiek187\"\r\n              target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fab fa-linkedin-in\"/> LinkedIn\r\n            </a>\r\n            <a className=\"contact-github\" href=\"https://github.com/abhiek187\"\r\n              target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fab fa-github\"/> GitHub\r\n            </a>\r\n            {/* Opens default email program */}\r\n            <a className=\"contact-email\" href=\"mailto:achaudhuri2011@yahoo.com\"\r\n              target=\"_top\">\r\n              <i className=\"fas fa-envelope\"/> Email\r\n            </a>\r\n          </span>\r\n        </div>\r\n      </main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Contact;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t// Enable react router and work in GitHub Pages\r\n\t<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}