{"version":3,"sources":["About.js","Projects.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["About","document","getElementsByTagName","textContent","react_default","a","createElement","className","src","alt","Component","Projects","projects","JSON","parse","stringify","projectData","map","project","key","id","name","image","about","technology","join","website","href","target","rel","repo","Contact","App","Switch","Route","exact","path","render","src_About","src_Projects","src_Contact","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","basename","process","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d0ce20d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n\trender() {\r\n    const bio = \"Abhishek Chaudhuri is a college student from North Brunswick, New Jersey. He studies\" +\r\n      \" at Rutgers University-New Brunswick, majors in Computer Engineering, and minors in Computer\" +\r\n      \" Science. He excels in subjects like math and science and has a strong penchant for\" +\r\n      \" programming and technology. Some of his hobbies include doing taekwondo, playing the flute &\" +\r\n      \" piccolo, and playing video games. His ultimate goal in life is to help make society better\" +\r\n      \" for everyone. He can put his technical skills to good use by gaining experience from working\" +\r\n      \" with other companies who value his ambitions.\";\r\n    document.getElementsByTagName('title')[0].textContent = 'Abhishek Chaudhuri - About';\r\n\r\n\t\treturn (\r\n      <main className=\"about\">\r\n        <h3 className=\"about-heading\">About</h3>\r\n        <img className=\"about-headshot\" src=\"/img/IMG_0987.JPG\" alt=\"Headshot of Abhishek\"/>\r\n        <p className=\"about-bio\">{bio}</p>\r\n      </main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport projectData from './projects.json';\r\n\r\nclass Projects extends Component {\r\n\trender() {\r\n    const projects = JSON.parse(JSON.stringify(projectData));\r\n    document.getElementsByTagName('title')[0].textContent = 'Abhishek Chaudhuri - Projects';\r\n\r\n\t\treturn (\r\n      <main className=\"projects\">\r\n\t\t\t  <h3 className=\"projects-heading\">Projects</h3>\r\n        <ul className=\"projects-list\">\r\n          {projects.map(project => (\r\n            <li key={project.id}>\r\n              <h4 className=\"projects-name\">{project.name}</h4>\r\n              <img className=\"projects-image\" src={project.image} alt={project.name}/>\r\n              <p className=\"projects-about\">{project.about}</p>\r\n              <p className=\"projects-technology\">Made Using: {project.technology.join(', ')}</p>\r\n              {project.website ? (\r\n                <a className=\"projects-website\" href={project.website} target=\"_blank\"\r\n                rel=\"noopener noreferrer\">View Project</a>\r\n              ) : (\r\n                <p className=\"projects-website\">&darr; See GitHub link below &darr;</p>\r\n              )}\r\n              <a className=\"projects-repo\" href={project.repo} target=\"_blank\"\r\n                rel=\"noopener noreferrer\">View on GitHub</a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n\trender() {\r\n    document.getElementsByTagName('title')[0].textContent = 'Abhishek Chaudhuri - Contact';\r\n\r\n\t\treturn (\r\n\t\t\t<main className=\"contact\">\r\n        <h3 className=\"contact-heading\">Contact</h3>\r\n        <a className=\"contact-resume\"\r\n          href=\"https://www.dropbox.com/s/05i2g7mmehfck9u/Resume%20v2.pdf?dl=0\" target=\"_blank\"\r\n          rel=\"noopener noreferrer\">\r\n          <i className=\"fas fa-file-pdf\"/> Resume\r\n        </a>\r\n        <a className=\"contact-linkedin\" href=\"https://www.linkedin.com/in/abhiek187\"\r\n          target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <i className=\"fab fa-linkedin-in\"/> LinkedIn\r\n        </a>\r\n        <a className=\"contact-github\" href=\"https://github.com/abhiek187\"\r\n          target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <i className=\"fab fa-github\"/> GitHub\r\n        </a>\r\n        <a className=\"contact-email\" href=\"mailto:achaudhuri2011@yahoo.com\"\r\n          target=\"_top\">\r\n          <i className=\"fas fa-envelope\"/> Email\r\n        </a>\r\n      </main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport About from './About';\r\nimport Projects from './Projects';\r\nimport Contact from './Contact';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    document.getElementsByTagName('title')[0].textContent = 'Abhishek Chaudhuri - Home';\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"heading\">\r\n          <h1 className=\"heading-name\">Abhishek Chaudhuri</h1>\r\n          <h2 className=\"heading-headline\">\r\n            Computer Engineering & Science Student at Rutgers University - New Brunswick\r\n          </h2>\r\n        </header>\r\n        <nav className=\"links\">\r\n          <a className=\"links-about\" href=\"/about\">About</a>\r\n          <a className=\"links-projects\" href=\"/projects\">Projects</a>\r\n          <a className=\"links-contact\" href=\"/contact\">Contact</a>\r\n        </nav>\r\n        <hr/>\r\n        <Switch>\r\n          <Route exact path={process.env.PUBLIC_URL + '/'} render={() => (\r\n            <main className=\"home\">\r\n              <p className=\"home-info\">\r\n                Hello and welcome to my website! Please click the links above for more info about me.\r\n              </p>\r\n            </main>\r\n          )}/>\r\n          <Route path={process.env.PUBLIC_URL + '/about'} render={() => (\r\n            <About/>\r\n          )}/>\r\n          <Route path={process.env.PUBLIC_URL + '/projects'} render={() => (\r\n            <Projects/>\r\n          )}/>\r\n          <Route path={process.env.PUBLIC_URL + '/contact'} render={() => (\r\n            <Contact/>\r\n          )}/>\r\n          <Route render={() => (\r\n            <main className=\"error\">\r\n              <p className=\"error-message\">\r\n                Whoops! That path is invalid. Please click the links above.\r\n              </p>\r\n            </main>\r\n          )}/>\r\n        </Switch>\r\n        <hr/>\r\n        <footer className=\"foot\">\r\n          <span className=\"foot-left\">\r\n            Made using <a className=\"foot-react\" href=\"https://reactjs.org/\" target=\"_blank\"\r\n              rel=\"noopener noreferrer\">React</a>\r\n            <img className=\"foot-react-img\" src=\"/img/logo.svg\" alt=\"React logo (an atom)\"/>\r\n          </span>\r\n          <span className=\"foot-right\">\r\n            <a className=\"foot-mit\" target=\"_blank\" rel=\"noopener noreferrer\"\r\n              href=\"https://github.com/Abhiek187/abhiek187.github.io/blob/master/LICENSE\">\r\n              MIT License</a> Copyright (c) 2019 Abhishek Chaudhuri\r\n          </span>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t// Enable react router and work in GitHub Pages\r\n\t<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}